[project]
name = "lawmatics-mcp-server"
version = "0.1.0"
description = "Model Context Protocol server for Lawmatics legal practice management platform"
authors = [{ name = "Your Name", email = "your.email@example.com" }]
readme = "README.md"
requires-python = ">=3.12.0"
keywords = ["mcp", "lawmatics", "legal", "crm", "llm", "practice-management"]

dependencies = [
    "fastmcp>=2.8.0",
    "httpx>=0.28.1",
    "loguru>=0.7.3",
    "python-dotenv>=1.0.0",
    "anyio>=3.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "psutil>=6.0.0",
]

[tool.uv]
dev-dependencies = [
    # Testing
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    # Code quality
    "mypy>=1.12.0",
    "ruff>=0.8.0",
    # Development tools
    "ipython>=8.28.0",
    "rich>=13.9.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.mypy]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
check_untyped_defs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
]
